<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Моя корзина</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-dark-5@1.1.3/dist/css/bootstrap-dark.min.css" rel="stylesheet">
</head>

<body>
    <div class="container">
        <h1 class="text-center mt-4">Корзина</h1>

        <% if (items.length === 0) { %>
            <p class="text-center text-muted">Ваша корзина пуста</p>
        <% } else { %>
            <div id="cart-items" class="row">
                <% items.forEach(item => { %>
                    <div class="col-md-4 mb-3">
                        <div class="card">
                            <img src="/images/<%= item.image %>" class="card-img-top" alt="<%= item.name %>">
                            <div class="card-body text-center">
                                <h5 class="card-title"><%= item.name %></h5>
                                <p class="card-text"><strong><%= item.price.toLocaleString() %>₸</strong></p>
                                <p>Кол-во: <%= item.quantity %></p>
                                <button class="btn btn-danger btn-sm" onclick="removeFromCart('<%= item._id %>')">Удалить</button>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>

            <h3 class="text-end mt-3">Итого: <span id="total-price"><%= totalPrice.toLocaleString() %></span>₸</h3>
            <div id="checkout-container"></div> 
        <% } %>
    </div>

    <script>
        async function loadCart() {
            try {
                const response = await fetch('/api/v1/cart', { headers: { 'Accept': 'application/json' } });

                if (!response.ok) throw new Error("Ошибка загрузки корзины");

                const data = await response.json();
                if (!data.success) return;

                let cartContainer = document.getElementById('cart-items');
                let totalPriceElement = document.getElementById('total-price');
                let checkoutContainer = document.getElementById('checkout-container'); 

                cartContainer.innerHTML = "";
                checkoutContainer.innerHTML = ""; 

                if (data.items.length === 0) {
                    cartContainer.innerHTML = `<p class="text-center">Корзина пуста</p>`;
                    totalPriceElement.textContent = "0";
                    return;
                }

                let total = 0;
                data.items.forEach(item => {
                    let cartItem = document.createElement('div');
                    cartItem.classList.add('col-md-4', 'mb-3');

                    cartItem.innerHTML = `
                        <div class="card">
                            <img src="/images/${item.image}" class="card-img-top" alt="${item.name}">
                            <div class="card-body text-center">
                                <h5 class="card-title">${item.name}</h5>
                                <p class="card-text"><strong>${item.price.toLocaleString()}₸</strong></p>
                                <p>Кол-во: ${item.quantity}</p>
                                <button class="btn btn-danger btn-sm" onclick="removeFromCart('${item._id}')">Удалить</button>
                            </div>
                        </div>
                    `;

                    cartContainer.appendChild(cartItem);
                    total += item.price * item.quantity;
                });

                totalPriceElement.textContent = total.toLocaleString();

                let checkoutButton = document.createElement('button');
                checkoutButton.classList.add('btn', 'btn-success', 'w-100', 'mt-3');
                checkoutButton.textContent = 'Оплатить';
                checkoutButton.onclick = () => window.location.href = '/checkout';

                checkoutContainer.appendChild(checkoutButton);

            } catch (error) {
                console.error("Ошибка загрузки корзины:", error);
            }
        }

        async function removeFromCart(itemId) {
            try {
                const response = await fetch('/api/v1/cart/delete', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ itemId })
                });

                const data = await response.json();
                if (data.success) {
                    loadCart();
                } else {
                    alert("Ошибка при удалении товара: " + data.message);
                }
            } catch (error) {
                console.error("Ошибка удаления товара:", error);
                alert("Не удалось удалить товар. Попробуйте позже.");
            }
        }

        loadCart();
    </script>
    
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>
